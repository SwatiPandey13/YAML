# main.yml - reusable template
parameters:
- name: jobNamePrefix
  type: string
  default: ''
- name: BuildAgentImage
  type: string
  default: 'RHEL8_Servers'
- name: buildTool
  type: string
  default: 'maven'
- name: mavenGoals
  type: string
  default: 'clean package'
- name: buildArgs
  type: string
  default: '-DskipTests=true'
- name: image
  type: string
  default: 'podman'
- name: contents
  type: string
  default: '**/*.war'

jobs:
- job: ${{ parameters.jobNamePrefix }}_Build
  variables:
    - group: ArtifactorySettings
    - name: JAVA_HOME
      value: /opt/app/jvm/jdk-17
    - name: MAVEN_HOME
      value: /opt/citools/jenkins_unit/37d0742a/tools/hudson.tasks.Maven_MavenInstallation/MAVEN-3.8.8
    - name: M2_HOME
      value: /opt/citools/jenkins_unit/37d0742a/tools/hudson.tasks.Maven_MavenInstallation/MAVEN-3.8.8
  steps:
  - template: build.yml
    parameters:
      buildTool: ${{ parameters.buildTool }}
      mavenGoals: ${{ parameters.mavenGoals }}
      buildArgs: ${{ parameters.buildArgs }}
      image: ${{ parameters.image }}
      contents: ${{ parameters.contents }}

- job: ${{ parameters.jobNamePrefix }}_Analysis
  dependsOn: ${{ parameters.jobNamePrefix }}_Build
  variables:
    - group: ArtifactorySettings
    - name: JAVA_HOME
      value: /opt/app/jvm/jdk-17
  steps:
  - script: echo "Preparing SonarQube analysis environment"
    displayName: 'Analysis Initialization'
  - template: sonar-analysis-template.yml
    parameters:
      buildTool: ${{ parameters.buildTool }}
      mavenPomFile: 'pom.xml'
      sonarProjectKey: $(SONAR_PROJECT_KEY)
      sonarHostUrl: $(SONARQUBE_URL)
      sonarToken: $(SONARQUBE_TOKEN)

- job: ${{ parameters.jobNamePrefix }}_SecurityScan
  dependsOn: ${{ parameters.jobNamePrefix }}_Analysis
  steps:
  - template: snyk-code-scan-template.yml
    parameters:
      snykDebugEnabled: false
      branchName: $(Build.SourceBranchName)
      repoName: $(Build.Repository.Name)
      buildTool: 'python'
      platform: 'linux'

==========================

# azure-pipelines.yml
trigger: none
pool:
  name: RHEL8_Servers

resources:
  repositories:
    - repository: shared
      type: git
      name: Workflowlib_Global_Template/DevOps_Global_Template
      ref: workflowlib

variables:
  - group: ArtifactorySettings
  - name: SONAR_PROJECT_KEY
    value: 'your-project-key'
  - name: SONARQUBE_URL
    value: 'https://your-sonarqube-instance'
  - name: SONARQUBE_TOKEN
    value: '$(sonar-token)' # Defined in Azure DevOps variables

stages:
- stage: BuildApplication
  jobs:
  - template: main.yml@shared
    parameters:
      jobNamePrefix: 'App1'
      buildTool: 'maven'
      mavenGoals: 'clean package'
      buildArgs: '-DskipTests=true'
      image: 'podman'
      contents: '**/*.war'
